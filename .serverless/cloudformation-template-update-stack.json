{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "GetBooksLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/book-api-lambda-dev-getBooks"
      }
    },
    "CreateBookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/book-api-lambda-dev-createBook"
      }
    },
    "GetBookByIdLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/book-api-lambda-dev-getBookById"
      }
    },
    "UpdateBookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/book-api-lambda-dev-updateBook"
      }
    },
    "DeleteBookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/book-api-lambda-dev-deleteBook"
      }
    },
    "RestoreBookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/book-api-lambda-dev-restoreBook"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "book-api-lambda",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/book-api-lambda-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/book-api-lambda-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Scan"
                  ],
                  "Resource": "arn:aws:dynamodb:eu-west-1:*:table/Books"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "book-api-lambda",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetBooksLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-abee9671-599e",
          "S3Key": "serverless/book-api-lambda/dev/1747510499158-2025-05-17T19:34:59.158Z/getBooks.zip"
        },
        "Handler": "handlers/getBooks.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "book-api-lambda-dev-getBooks",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE": "Books",
            "JWT_SECRET": "your_secret"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:219257094456:layer:aws-sdk-custom:3"
        ]
      },
      "DependsOn": [
        "GetBooksLogGroup"
      ]
    },
    "CreateBookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-abee9671-599e",
          "S3Key": "serverless/book-api-lambda/dev/1747510499158-2025-05-17T19:34:59.158Z/createBook.zip"
        },
        "Handler": "handlers/createBook.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "book-api-lambda-dev-createBook",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE": "Books",
            "JWT_SECRET": "your_secret"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:219257094456:layer:aws-sdk-custom:3"
        ]
      },
      "DependsOn": [
        "CreateBookLogGroup"
      ]
    },
    "GetBookByIdLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-abee9671-599e",
          "S3Key": "serverless/book-api-lambda/dev/1747510499158-2025-05-17T19:34:59.158Z/getBookById.zip"
        },
        "Handler": "handlers/getBookById.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "book-api-lambda-dev-getBookById",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE": "Books",
            "JWT_SECRET": "your_secret"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:219257094456:layer:aws-sdk-custom:3"
        ]
      },
      "DependsOn": [
        "GetBookByIdLogGroup"
      ]
    },
    "UpdateBookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-abee9671-599e",
          "S3Key": "serverless/book-api-lambda/dev/1747510499158-2025-05-17T19:34:59.158Z/updateBook.zip"
        },
        "Handler": "handlers/updateBook.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "book-api-lambda-dev-updateBook",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE": "Books",
            "JWT_SECRET": "your_secret"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:219257094456:layer:aws-sdk-custom:3"
        ]
      },
      "DependsOn": [
        "UpdateBookLogGroup"
      ]
    },
    "DeleteBookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-abee9671-599e",
          "S3Key": "serverless/book-api-lambda/dev/1747510499158-2025-05-17T19:34:59.158Z/deleteBook.zip"
        },
        "Handler": "handlers/deleteBook.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "book-api-lambda-dev-deleteBook",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE": "Books",
            "JWT_SECRET": "your_secret"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:219257094456:layer:aws-sdk-custom:3"
        ]
      },
      "DependsOn": [
        "DeleteBookLogGroup"
      ]
    },
    "RestoreBookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-abee9671-599e",
          "S3Key": "serverless/book-api-lambda/dev/1747510499158-2025-05-17T19:34:59.158Z/restoreBook.zip"
        },
        "Handler": "handlers/restoreBook.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "book-api-lambda-dev-restoreBook",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE": "Books",
            "JWT_SECRET": "your_secret"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:219257094456:layer:aws-sdk-custom:3"
        ]
      },
      "DependsOn": [
        "RestoreBookLogGroup"
      ]
    },
    "DeleteBookLambdaVersionBOBfTVmQKHBFUgLwr9TOz3UULvPWtoOoDu7Vyxr7Ps": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteBookLambdaFunction"
        },
        "CodeSha256": "FEJQH6k9Dwfh47Iw8A4iujIh/Is1AhekprcEKSTN5fQ="
      }
    },
    "GetBooksLambdaVersion2MkSCcxkXsDx90j3tBdu20Ni3pZ4ianZjP1T2CIwlg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetBooksLambdaFunction"
        },
        "CodeSha256": "FEJQH6k9Dwfh47Iw8A4iujIh/Is1AhekprcEKSTN5fQ="
      }
    },
    "GetBookByIdLambdaVersion2iu8nSQvcU3d8BvOVufxpvyekXcH5yDhpJDcEmh8b9o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetBookByIdLambdaFunction"
        },
        "CodeSha256": "FEJQH6k9Dwfh47Iw8A4iujIh/Is1AhekprcEKSTN5fQ="
      }
    },
    "CreateBookLambdaVersionb6TZJQWbGo2s2QmfUmbw1mQtGkuiRsdkIKRtMewM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateBookLambdaFunction"
        },
        "CodeSha256": "FEJQH6k9Dwfh47Iw8A4iujIh/Is1AhekprcEKSTN5fQ="
      }
    },
    "UpdateBookLambdaVersion8mbjlYJeNEmbRUL9N8wb3lkyZJGsUAkpE1EhOSGFdo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateBookLambdaFunction"
        },
        "CodeSha256": "FEJQH6k9Dwfh47Iw8A4iujIh/Is1AhekprcEKSTN5fQ="
      }
    },
    "RestoreBookLambdaVersionSTn9Hxmi0Ox8wg2PubDehnfjBm84RWwCzV6MVcVzhw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RestoreBookLambdaFunction"
        },
        "CodeSha256": "FEJQH6k9Dwfh47Iw8A4iujIh/Is1AhekprcEKSTN5fQ="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-book-api-lambda",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceBooks": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "books",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceBooksIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceBooks"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceBooksIdVarRestore": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceBooksIdVar"
        },
        "PathPart": "restore",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodBooksGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceBooks"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetBooksLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetBooksLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodBooksPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceBooks"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateBookLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateBookLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodBooksIdVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceBooksIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetBookByIdLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetBookByIdLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodBooksIdVarPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceBooksIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateBookLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateBookLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodBooksIdVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceBooksIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteBookLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteBookLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodBooksIdVarRestorePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceBooksIdVarRestore"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RestoreBookLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "RestoreBookLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1747510487158": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodBooksGet",
        "ApiGatewayMethodBooksPost",
        "ApiGatewayMethodBooksIdVarGet",
        "ApiGatewayMethodBooksIdVarPut",
        "ApiGatewayMethodBooksIdVarDelete",
        "ApiGatewayMethodBooksIdVarRestorePost"
      ]
    },
    "GetBooksLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetBooksLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateBookLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateBookLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetBookByIdLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetBookByIdLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateBookLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateBookLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteBookLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteBookLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "RestoreBookLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RestoreBookLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "BooksTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "Books",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-west-1-abee9671-599e",
      "Export": {
        "Name": "sls-book-api-lambda-dev-ServerlessDeploymentBucketName"
      }
    },
    "DeleteBookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteBookLambdaVersionBOBfTVmQKHBFUgLwr9TOz3UULvPWtoOoDu7Vyxr7Ps"
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-DeleteBookLambdaFunctionQualifiedArn"
      }
    },
    "GetBooksLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetBooksLambdaVersion2MkSCcxkXsDx90j3tBdu20Ni3pZ4ianZjP1T2CIwlg"
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-GetBooksLambdaFunctionQualifiedArn"
      }
    },
    "GetBookByIdLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetBookByIdLambdaVersion2iu8nSQvcU3d8BvOVufxpvyekXcH5yDhpJDcEmh8b9o"
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-GetBookByIdLambdaFunctionQualifiedArn"
      }
    },
    "CreateBookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateBookLambdaVersionb6TZJQWbGo2s2QmfUmbw1mQtGkuiRsdkIKRtMewM"
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-CreateBookLambdaFunctionQualifiedArn"
      }
    },
    "UpdateBookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateBookLambdaVersion8mbjlYJeNEmbRUL9N8wb3lkyZJGsUAkpE1EhOSGFdo"
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-UpdateBookLambdaFunctionQualifiedArn"
      }
    },
    "RestoreBookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RestoreBookLambdaVersionSTn9Hxmi0Ox8wg2PubDehnfjBm84RWwCzV6MVcVzhw"
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-RestoreBookLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-book-api-lambda-dev-ServiceEndpoint"
      }
    }
  }
}